//! `SeaORM` Entity, @generated by sea-orm-codegen 1.1.8

use sea_orm::entity::prelude::*;

#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Eq)]
#[sea_orm(table_name = "tray_configurations")]
pub struct Model {
    #[sea_orm(column_type = "Text", nullable, unique)]
    pub name: Option<String>,
    pub experiment_default: bool,
    pub created_at: DateTimeWithTimeZone,
    pub last_updated: DateTimeWithTimeZone,
    #[sea_orm(primary_key, auto_increment = false)]
    pub id: Uuid,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {
    #[sea_orm(has_many = "super::experiments::Entity")]
    Experiments,
    #[sea_orm(has_many = "super::tray_configuration_assignments::Entity")]
    TrayConfigurationAssignments,
}

impl Related<super::experiments::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::Experiments.def()
    }
}

impl Related<super::tray_configuration_assignments::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::TrayConfigurationAssignments.def()
    }
}

impl ActiveModelBehavior for ActiveModel {}
