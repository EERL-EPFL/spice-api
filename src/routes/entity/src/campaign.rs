// //! `SeaORM` Entity, @generated by sea-orm-codegen 1.1.8

// use sea_orm::entity::prelude::*;

// #[derive(Clone, Debug, PartialEq, DeriveEntityModel, Eq)]
// #[sea_orm(table_name = "campaign")]
// pub struct Model {
//     #[sea_orm(primary_key, auto_increment = false)]
//     pub id: Uuid,
//     #[sea_orm(unique)]
//     pub name: String,
//     #[sea_orm(column_type = "Decimal(Some((9, 6)))", nullable)]
//     pub latitude: Option<Decimal>,
//     #[sea_orm(column_type = "Decimal(Some((9, 6)))", nullable)]
//     pub longitude: Option<Decimal>,
//     #[sea_orm(column_type = "Text", nullable)]
//     pub comment: Option<String>,
//     pub start_date: Option<DateTimeWithTimeZone>,
//     pub end_date: Option<DateTimeWithTimeZone>,
//     pub last_updated: DateTimeWithTimeZone,
// }

// #[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
// pub enum Relation {
//     #[sea_orm(has_many = "super::experiments::Entity")]
//     Experiments,
// }

// impl Related<super::experiments::Entity> for Entity {
//     fn to() -> RelationDef {
//         Relation::Experiments.def()
//     }
// }

// impl ActiveModelBehavior for ActiveModel {}
