//! `SeaORM` Entity, @generated by sea-orm-codegen 1.1.8

use sea_orm::entity::prelude::*;

#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Eq)]
#[sea_orm(table_name = "time_point_temperatures")]
pub struct Model {
    #[sea_orm(primary_key, auto_increment = false)]
    pub id: Uuid,
    pub time_point_id: Uuid,
    pub probe_sequence: i32,
    pub temperature: Decimal,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {
    #[sea_orm(
        belongs_to = "super::time_points::Entity",
        from = "Column::TimePointId",
        to = "super::time_points::Column::Id",
        on_update = "NoAction",
        on_delete = "Cascade"
    )]
    TimePoints,
}

impl Related<super::time_points::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::TimePoints.def()
    }
}

impl ActiveModelBehavior for ActiveModel {}
